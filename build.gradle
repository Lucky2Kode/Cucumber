plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

ext {
    set('apacheCommonsVersion','3.9')
    set('cucumberVersion', '7.11.0')
    set('testNgVersion', '7.0.0')
    set('restAssuredVersion', '4.4.0')
    set('cucumberReportVersion', '5.8.2')
    set('springWSCoreVersion', '3.0.8.RELEASE')
    set('httpClientVersion', '4.5.5')

}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {

    implementation 'com.google.guava:guava:29.0-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation ("io.cucumber:cucumber-java:${cucumberVersion}")
    testImplementation 'io.cucumber:cucumber-junit:7.19.0'
    testImplementation 'io.cucumber:cucumber-core:7.19.0'
    testImplementation("net.masterthought:cucumber-reporting:5.8.2")
    testImplementation("io.qameta.allure:allure-cucumber7-jvm:2.22.0")
    testImplementation("io.qameta.allure:allure-junit5:2.29.0")
    testImplementation("io.qameta.allure:allure-testng:2.29.0")

    testImplementation 'io.rest-assured:rest-assured:4.3.3'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties = System.properties
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--glue',   'com.example.definitions',
                    '--plugin', 'pretty',
                    '--plugin', 'json:build/reports/verifyFunctionalTest/Cucumber.json',
                    '--plugin', 'junit:build/reports/verifyFunctionalTest/Cucumber.xml',
                    '--plugin', 'html:build/reports/verifyFunctionalTest/Cucumber.html',
                    '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
                    'src/test/resources']
        }
    }
}

task allureReport(type: Exec) {
    dependsOn cucumber
    commandLine '/opt/homebrew/Cellar/allure/2.30.0/bin/allure', 'generate', './allure-results', '--clean', '-o', './build/allure-report'
}

task serveAllureReport(type: Exec) {
    dependsOn allureReport
    commandLine '/opt/homebrew/Cellar/allure/2.30.0/bin/allure', 'serve', './allure-results'
}



